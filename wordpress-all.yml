### Wordpress installation for Ubuntu,Debian,centOS,Fedora ###
---

 #- hosts: all
  # gather_facts: True
 - hosts: wordpress
   user: vinod
   become: yes
   become_method: sudo
   become_user: root
   vars:
     wp_mysql_db: wordpress
     wp_mysql_user: wordpress
     wp_mysql_password: randompassword
   
   tasks:

      ### Update apt cache in Debian and Ubuntu ###

    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600
      become: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
     
      ### Update yum cache in Centos and Fedora ###     

    - name: Update yum cache
      yum: update_cache=yes
      become: yes 
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

      ### Ubuntu Packages ###

    - name: Install required software
      apt: name=apache2,mysql-server,python-mysqldb state=present
      become: yes
      when: ansible_distribution == 'Ubuntu'
    
    - name: Install php extensions
      apt: name=php7.2-gd,php7.2-ssh2,libapache2-mod-php7.2,php7.2,php7.2-mysql state=present
      become: yes
      when: ansible_distribution == 'Ubuntu'
      
      ### Debian Packages ### 

    - name: Install required software
      apt: name=apache2,mysql-server,python-mysqldb state=present
      become: yes
      when: ansible_distribution == 'Debian'

    - name: Install php extensions
      apt: name=php7.0-mysql,php7.0,libapache2-mod-php7.0,php7.0-gd,php7.0-ssh2 state=present
      become: yes
      when: ansible_distribution == 'Debian'
    
     ### CentOS Packages ###
    
    - name: Install required software
      yum: name=httpd,mariadb-server,mariadb,unzip,wget,MySQL-python state=present
      become: yes
      when: ansible_distribution == 'CentOS'    

    - name: Install php extensions
      yum: name=php,php-mysql,php-gd,php-ldap,php-odbc,php-pear,php-xml,php-xmlrpc,php-mbstring,php-snmp,php-soap,curl state=present
      become: yes
      when: ansible_distribution == 'CentOS'
    
      ### Fedora Packages ###
     
    - name: Install required software
      yum: name=httpd,mariadb-server,mariadb,unzip,wget,MySQL-python state=present
      become: yes
      when: ansible_distribution == 'Fedora'
    
    - name: Install php extensions
      yum: name=php,php-pdo_mysql,php-xml,php-gd,policycoreutils-python  state=present
      become: yes
      when: ansible_distribution == 'Fedora'
      
      #### restartining mariadb in Centos and Fedora ####

    - name: restart mariadb
      service: name=mariadb state=restarted enabled=yes
      become: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

      #### setting selinux permissive in Centos and Fedora ####

    - name: setting selinux permissive
      selinux:
       policy: targeted
       state: permissive
      become: yes 
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'


    - name: setting firewalld
      firewalld:
        zone: public
        service: "{{ item }}"
        permanent: true
        state: enabled
      with_items:
        - http
        - https
      become: yes
      when: ansible_distribution == 'CentOS'

      ####Starting mariadb in Centos and Fedora ####

    - name: restart mariadb
      service: name=mariadb state=restarted enabled=yes
      become: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

     #### Creating database and user in ALL distros ##

    - name: Create mysql database
      mysql_db: name={{ wp_mysql_db }} state=present
      become: yes

    - name: Create mysql user
      mysql_user:
       name={{ wp_mysql_user }}
       password={{ wp_mysql_password }}
       priv=*.*:ALL
      become: yes

      #### Downloading and configuring wordpress in Ubuntu and Uebian #### 

    - name: Download WordPress
      get_url:
       url=https://wordpress.org/latest.tar.gz
       dest=/tmp/wordpress.tar.gz
       validate_certs=no
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Extract WordPress
      unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no
      become: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Update default Apache site
      become: yes
      lineinfile:
       dest=/etc/apache2/sites-enabled/000-default.conf
       regexp="(.)+DocumentRoot /var/www/html"
       line="DocumentRoot /var/www/wordpress"
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Copy sample config file
      command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
      become: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'  

    - name: Update WordPress config file
      lineinfile:
       dest=/var/www/wordpress/wp-config.php
       regexp="{{ item.regexp }}"
       line="{{ item.line }}"
      with_items:
       - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_mysql_db}}');"}     
       - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_mysql_user}}');"}   
       - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_mysql_password}}');"}
      become: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

      #### Downloading and configuring wordpress in Centos and Fedord #### 

    - name: Download WordPress
      get_url:
       url=https://wordpress.org/latest.zip
       dest=/tmp/latest.zip
       validate_certs=no
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

    - name: Extract WordPress
      unarchive: src=/tmp/latest.zip  dest=/var/www/html copy=no
      become: yes 
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

    - name: Update default Apache site
      become: yes
      lineinfile:
       dest=/etc/httpd/conf/httpd.conf
       regexp="(.)+DocumentRoot /var/www/html"
       line="DocumentRoot /var/www/html/wordpress"
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

    - name: Update WordPress config file
      lineinfile:
       dest=/var/www/html/wordpress/wp-config-sample.php
       regexp="{{ item.regexp }}"
       line="{{ item.line }}"
      with_items:
       - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_mysql_db}}');"}     
       - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_mysql_user}}');"}   
       - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_mysql_password}}');"}
      become: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

    - name:  copying WordPress config file wp-config-sample.php to wp-config.php
      command: cp -r /var/www/html/wordpress/wp-config-sample.php   /var/www/html/wordpress/wp-config.php
      become: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

      #### restarting firewalld in Centos ####

    - name: restart firewalld
      service: name=firewalld state=restarted
      become: yes
      when: ansible_distribution == 'CentOS'
    
      #### restarting apache in  Ubuntu and Debian ###
    
    - name: restart apache
      service: name=apache2 state=restarted enabled=yes
      become: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

      #### restarting apache in  Centos and Fedora ###

    - name: restart httpd
      service: name=httpd state=restarted
      become: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'

      #### Code Ended #### 
